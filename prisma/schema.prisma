// prisma/schema.prisma
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String
  email        String       @unique
  password     String

  // ✅ On garde une chaîne pour mémoriser le provider d’origine
  // Valeurs possibles (convention côté app) : "local" | "google" | "facebook"
  authProvider String       @default("local")

  // Optionnel : identifiant renvoyé par Google (sub) ou Facebook (id)
  providerId   String?

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  predictions  Prediction[]
  points       Point[]
}

model Prediction {
  id          Int      @id @default(autoincrement())
  userId      Int
  matchday    Int
  matchId     String
  team1Score  Int
  team2Score  Int
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, matchday, matchId])
  @@index([userId, matchday])
}

model Point {
  id        Int      @id @default(autoincrement())
  userId    Int
  matchday  Int
  matchId   String
  points    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, matchday, matchId])
  @@index([userId, matchday])
}

model Result {
  id         Int      @id @default(autoincrement())
  matchday   Int
  matchId    String
  team1Score Int
  team2Score Int
  createdAt  DateTime @default(now())

  @@unique([matchday, matchId])
  @@index([matchday])
}
